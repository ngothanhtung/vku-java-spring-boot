# docker-compose.yml
# This file is used to define and run multi-container Docker applications.
# It sets up a Spring Boot application with a MySQL database and Redis.
services:
  app:
    image: thanhtungo/vku-java-spring-boot-demo:latest
    ports:
      - '8080:8080'
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://server.aptech.io:3307/spring
      SPRING_DATASOURCE_USERNAME: developer
      SPRING_DATASOURCE_PASSWORD: developer_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  db:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: spring
      MYSQL_USER: developer
      MYSQL_PASSWORD: developer_password
    ports:
      - '3306:3306'
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      # This healthcheck ensures that the MySQL service is ready before the app starts.
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-proot_password']
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      timeout: 10s
      retries: 5
      interval: 5s
      start_period: 10s
volumes:
  db_data:
  redis_data:
